#import "../fragments/index.graphql"

mutation BeginVisit {
  begin_visit {
    success
    message
    jwt
  }
}

mutation EndVisit {
  end_visit {
    success
    message
  }
}

mutation LogIn($email_address: String!, $password: String!) {
  log_in(email_address: $email_address, password: $password) {
    success
    message
    jwt
  }
}

mutation LogOut {
  log_out {
    success
    message
  }
}

mutation VerifyPasswordReset($verification_code: String!, $password: String!) {
  verify_password_reset(verification_code: $verification_code, password: $password) {
    success
    message
  }
}

mutation VerifySignUp($verification_code: String!) {
  verify_sign_up(verification_code: $verification_code) {
    success
    message
  }
}

mutation StartPasswordReset($email_address: String!, $redirect_url: String) {
  start_password_reset(email_address: $email_address, redirect_url: $redirect_url) {
    success
    message
  }
}

mutation StartSignUp(
  $email_address: String!
  $password: String!
  $name: String!
  $redirect_url: String
) {
  start_sign_up(
    email_address: $email_address
    password: $password
    name: $name
    redirect_url: $redirect_url
  ) {
    success
    message
  }
}

mutation CreateAgency(
  $name: String!
  $livemode: Boolean!
  $subdomain_name: String!
  $country_code: String!
  $image_logo: ImageInput!
  $return_url: String!
) {
  create_agency(
    name: $name
    livemode: $livemode
    subdomain_name: $subdomain_name
    country_code: $country_code
    image_logo: $image_logo
    return_url: $return_url
  ) {
    stripe_verification_url
    message
    success
    agency {
      id
      name
      subdomain {
        id
        name
      }
    }
  }
}

mutation CreateProduct(
  $agency_id: ID!
  $name: String!
  $description: String!
  $url_name: String!
  $duration: String
  $image_logo: ImageInput
  $image_hero: ImageInput
  $status: String
) {
  create_product(
    agency_id: $agency_id
    name: $name
    description: $description
    url_name: $url_name
    duration: $duration
    image_logo: $image_logo
    image_hero: $image_hero
    status: $status
  ) {
    success
    message
    product {
      ...product
    }
  }
}

mutation UpdateProduct(
  $product_id: ID!
  $name: String
  $description: String
  $url_name: String
  $duration: String
  $default_price_id: ID
  $image_logo: ImageInput
  $image_hero: ImageInput
  $status: String
) {
  update_product(
    product_id: $product_id
    name: $name
    description: $description
    url_name: $url_name
    duration: $duration
    default_price_id: $default_price_id
    image_logo: $image_logo
    image_hero: $image_hero
    status: $status
  ) {
    success
    message
    product {
      ...product
    }
  }
}

mutation DeleteProduct($product_id: ID!) {
  delete_product(product_id: $product_id) {
    success
    message
    product {
      id
    }
  }
}

mutation CreatePrice(
  $product_id: ID!
  $unit_amount: Int!
  $currency: String!
  $recurring_interval: String
  $recurring_interval_count: Int
  $status: String
) {
  create_price(
    product_id: $product_id
    unit_amount: $unit_amount
    currency: $currency
    recurring_interval: $recurring_interval
    recurring_interval_count: $recurring_interval_count
    status: $status
  ) {
    success
    message
    price {
      ...price
    }
  }
}

mutation CreateCustomer($stripe_account_id: ID!, $email_address: String!, $name: String!) {
  create_customer(
    stripe_account_id: $stripe_account_id
    email_address: $email_address
    name: $name
  ) {
    success
    message
    customer {
      ...customer
    }
  }
}

mutation UpdateCustomer($customer_id: ID!, $name: String, $email_address: String) {
  update_customer(customer_id: $customer_id, name: $name, email_address: $email_address) {
    success
    message
    customer {
      ...customer
    }
  }
}

mutation DeleteCustomer($customer_id: ID!) {
  delete_customer(customer_id: $customer_id) {
    success
    message
    customer {
      id
    }
  }
}

mutation CreateAgencyThankYouPageSetting($agency_id: ID!, $url: String!) {
  create_agency_thank_you_page_setting(agency_id: $agency_id, url: $url) {
    success
    message
    setting {
      id
      url
    }
  }
}

mutation UpdateAgencyThankYouPageSetting($setting_id: ID!, $url: String!) {
  update_agency_thank_you_page_setting(setting_id: $setting_id, url: $url) {
    success
    message
    setting {
      id
      url
    }
  }
}

mutation DeleteAgencyThankYouPageSetting($setting_id: ID!) {
  delete_agency_thank_you_page_setting(setting_id: $setting_id) {
    success
    message
    setting {
      id
      url
    }
  }
}

mutation CreateProductThankYouPageSetting($product_id: ID!, $url: String!) {
  create_product_thank_you_page_setting(product_id: $product_id, url: $url) {
    success
    message
    setting {
      id
      url
    }
  }
}

mutation UpdateProductThankYouPageSetting($setting_id: ID!, $url: String!) {
  update_product_thank_you_page_setting(setting_id: $setting_id, url: $url) {
    success
    message
    setting {
      id
      url
    }
  }
}

mutation DeleteProductThankYouPageSetting($setting_id: ID!) {
  delete_product_thank_you_page_setting(setting_id: $setting_id) {
    success
    message
    setting {
      id
      url
    }
  }
}

mutation UpdatePage($page_id: ID!, $access: AccessLevel) {
  update_page(page_id: $page_id, access: $access) {
    success
    message
    page {
      ...page
    }
  }
}

mutation CreatePageBlock(
  $page_id: ID!
  $page_block_definition_id: ID!
  $data: Json!
  $after_id: ID
) {
  create_page_block(
    page_id: $page_id
    page_block_definition_id: $page_block_definition_id
    data: $data
    after_id: $after_id
  ) {
    success
    message
    page_block {
      ...page_block
    }
  }
}

mutation UpdatePageBlock($page_block_id: ID!, $data: Json!, $after_id: ID) {
  update_page_block(page_block_id: $page_block_id, data: $data, after_id: $after_id) {
    success
    message
    page_block {
      ...page_block
    }
  }
}

mutation DeletePageBlock($page_block_id: ID!) {
  delete_page_block(page_block_id: $page_block_id) {
    success
    message
    page_block {
      ...page_block
    }
  }
}
